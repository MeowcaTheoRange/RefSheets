body {
  margin: 0;
  height: 100vh;
  width: 100vw;
  background-color: var(--main10);
  color: var(--main90);
  font-family: 'Nunito', sans-serif;
  font-size: 16px;
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  justify-content: center;
  align-items: center;
  align-content: center;
}

a {
  color: var(--sec70);
  font-weight: bold;
}

div.flexparent {
  display: grid;
  grid-template-columns: 400px 1fr 410px;
  // grid-template-rows: 1fr fit-content fit-content;
  height: 100vh;
  max-height: 100vh;
  overflow: auto;
  width: 100vw;
  // max-width: 1000px;
  padding: 32px;
  gap: 8px 4px;
  box-sizing: border-box;

  &.nogrid {
    display: flex;
    flex-direction: row;
  }

  & div.flexbox {
    display: flex;
    flex-direction: column;
    flex-wrap: nowrap;
    justify-content: flex-start;
    align-items: stretch;
    align-content: stretch;
    gap: 8px;
    width: 100%;
    // height: max-content;

    &.general {
      grid-row: 1 / 3;
    }

    &.image {
      grid-row: 1 / 1;
      grid-column: 3 / 4;
      background-size: contain;
      background-repeat: no-repeat;
      background-position: center;
      min-height: 400px;
    }

    &.minecraftish {
      grid-row: 2 / 3;
      grid-column: 3 / 4;
    }

    &.bottomsheet {
      grid-column: 1 / 4;
    }
  }
}

div.box {
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  justify-content: flex-start;
  align-items: stretch;
  align-content: stretch;
  padding: 8px;
  border-radius: 8px;
  border: 1px solid var(--main80);
  background-color: var(--main20);
  color: var(--main80);

  & details {
    margin: 8px;

    & summary {
      cursor: pointer;
    }

    & > *:not(summary) {
      margin: -8px;
    }
  }

  & div.name,
  & div.header {
    font-size: 24px;
    // font-family: 'Rubik Mono One', sans-serif;
    font-family: 'Krona One', sans-serif;
  }

  & div.spacer {
    height: 0px;
    margin: 0 8px;
    border: 1px dashed var(--main40);
  }

  & div.vspacer {
    // display: inline-block;
    // height: 100%;
    align-self: stretch;
    width: 0;
    margin: 8px;
    border: 1px dashed var(--main40);
  }

  & div.header {
    font-size: 18px;
  }

  & div.body {
    margin: 8px;
    white-space: pre-line;
  }

  & div.widthbox,
  & div.infobox,
  & div.checklist,
  & div.digital {
    display: inline-flex;
    padding: 8px;
    border-radius: 8px;
    font-family: 'Inconsolata', monospace;
    gap: 8px;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: space-around;
    align-items: center;
    align-content: center;
  }

  & div.digital {
    padding: 4px;
  }

  & div.infobox,
  & div.checklist,
  & div.digital {
    flex-direction: column;
    flex-wrap: nowrap;
    justify-content: flex-start;
    align-items: stretch;
    align-content: stretch;
    background-color: var(--sec20);
    color: var(--sec90);
    margin: 8px;

    & div.listitem::before {
      content: "- "
    }
  }

  & div.listbox {
    display: inline-flex;
    padding: 8px;
    border-radius: 8px;
    font-family: 'Inconsolata', monospace;
    gap: 8px;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: flex-start;
    align-items: stretch;
    align-content: stretch;

    &.center {
      align-items: center;
      align-content: center;
    }
  }

  & div.checklist {
    background-color: transparent;
    color: var(--main80);
    margin: 0;

    & div.listitem.yes::before {
      content: "YES: ";
      color: var(--pos80);
      font-weight: bold;
    }

    & div.listitem.no::before {
      content: "NO: ";
      color: var(--neg80);
      font-weight: bold;
    }

    & div.listitem.ask::before {
      content: "ASK: ";
      color: var(--sec80);
      font-weight: bold;
    }

    & div.listitem.loves::before {
      content: "This character LOVES ";
      color: var(--pos50);
      font-weight: bold;
    }

    & div.listitem.likes::before {
      content: "This character likes ";
      color: var(--pos80);
      font-weight: bold;
    }

    & div.listitem.neutral::before {
      content: "This character is indifferent about ";
      color: var(--sec80);
      font-weight: bold;
    }

    & div.listitem.dislikes::before {
      content: "This character dislikes ";
      color: var(--neg80);
      font-weight: bold;
    }

    & div.listitem.hates::before {
      content: "This character HATES ";
      color: var(--neg50);
      font-weight: bold;
    }
  }

  &.inventory {
    display: flex;
    flex-direction: column;
    flex-wrap: nowrap;
    justify-content: center;
    align-items: stretch;
    align-content: stretch;
    gap: 8px;

    & div.grid {
      display: grid;
      width: 100%;
      grid-template-columns: repeat(9, 1fr);
      gap: 4px;

      &.main {
        grid-template-rows: repeat(3, auto);
      }

      &.hotbar {
        grid-template-rows: auto;
      }

      &.flexible {
        display: flex;
        flex-wrap: wrap;
        align-items: flex-start;
        align-content: flex-start;
      }

      & div.slot {
        display: flex;
        flex-direction: row;
        flex-wrap: nowrap;
        justify-content: center;
        align-items: center;
        align-content: center;
        aspect-ratio: 1 / 1;
        border-radius: 4px;
        min-width: 36px;
        background-color: var(--main30);
        // background: radial-gradient(circle, var(--main20) 15px, var(--main30) 16px);
        border: 2px solid var(--main40);
        user-select: none;

        &:hover {
          border: 2px solid var(--main70);
        }
      }
    }
  }
}

div.hoverlabel {
  position: fixed;
  left: 0;
  top: 0;
  display: inline-block;
  visibility: hidden;
  pointer-events: none;
  padding: 8px;
  border-radius: 4px;
  border: 1px solid var(--main90);
  background-color: var(--main10);
  color: var(--main90);
  font-family: 'Inconsolata', monospace;

  & div.label {
    font-weight: bold;
  }

  & div.name {
    color: var(--main50);
  }
}

@media only screen and (min-width: 1182px) {
  div.flexparent {
    & div.flexbox {
      &.general {
        grid-row: initial;
      }

      &.image {
        grid-row: initial;
        grid-column: initial;
        min-width: 300px;
      }

      &.minecraftish {
        grid-row: initial;
        grid-column: initial;
      }
    }
  }
}

@media only screen and (max-width: 882px) {
  div.flexparent {
    grid-template-columns: 100%;
    grid-template-rows: max-content min-content max-content;

    & div.flexbox {
      &.general {
        grid-row: initial;
      }

      &.image {
        grid-row: initial;
        grid-column: initial;
        height: 75vh;
      }

      &.minecraftish {
        grid-row: initial;
        grid-column: initial;
      }

      & div.inventory div.grid div.slot {
        min-width: 0;
      }

      &.bottomsheet {
        grid-column: 1 / 2;
      }
    }
  }

}